Name of the Script Include: WeatherUtil

Script Include:

var WeatherUtil = Class.create();
WeatherUtil.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

    getWeatherDetails: function() {
        var city = this.getParameter('sysparm_city');
        var apiKey = gs.getProperty('WeatherAPIKey'); // Replace this with your real API key
        var endpoint = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + '&appid=' + apiKey + '&units=metric';

        try {
            var r = new sn_ws.RESTMessageV2();
            r.setEndpoint(endpoint);
            r.setHttpMethod('GET');

            var response = r.execute();
            var body = response.getBody();
            var result = JSON.parse(body);

            var temp = result.main.temp;
            var desc = result.weather[0].description;

            return JSON.stringify({
                temperature: temp,
                description: desc
            });

        } catch (e) {
            return JSON.stringify({
                error: 'Failed to fetch weather data',
                message: e.message
            });
        }
    },

    type: 'WeatherUtil'
});



GlideAjax:
Method: OnChange
Field name: City

function onChange(control, oldValue, newValue, isLoading, isTemplate) {
    if (isLoading || newValue == '') return;

    var ga = new GlideAjax('WeatherUtil');
    ga.addParam('sysparm_name', 'getWeatherDetails');
    ga.addParam('sysparm_city', newValue);

    ga.getXMLAnswer(function(response) {
        var weather = JSON.parse(response);
        g_form.setValue('temperature', weather.temperature + ' Â°C');
        g_form.setValue('weather_description', weather.description);
        g_form.setValue('requested_by', g_user.userID);
        g_form.setValue('requested_on', new Date().toISOString().slice(0, 19).replace('T', ' '));

    });
}
