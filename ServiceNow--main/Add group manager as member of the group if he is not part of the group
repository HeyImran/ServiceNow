// Table: sys_user_group
// When: before update or insert
// Condition: current.manager is not empty
// Advanced: checked

(function executeRule(current, previous /*null when async*/) {
    
    var manager = current.manager;
    var groupSysId = current.sys_id;

    if (!manager) return; // no manager defined

    // Check if manager is already a member of the group
    var memberGR = new GlideRecord('sys_user_grmember');
    memberGR.addQuery('group', groupSysId);
    memberGR.addQuery('user', manager);
    memberGR.query();

    if (!memberGR.hasNext()) {
        // Add manager to the group members
        var newMember = new GlideRecord('sys_user_grmember');
        newMember.initialize();
        newMember.group = groupSysId;
        newMember.user = manager;
        newMember.insert();

        gs.info('Manager added to group members: ' + manager);
    }

})(current, previous);



Own Script:



(function executeRule(current, previous /*null when async*/ ) {

    var mg = current.manager;
    var grp = current.sys_id;
    if (!mg.hasNext()){
        gs.addInfoMessage('There is no Manager to Check');
    } else {
        gs.addInfoMessage('Group Manager is: ' + mg.getDisplayValue());
    }

    var grPM = new GlideRecord('sys_user_grmember');
    grPM.addQuery('group', current.sys_id);
	grPM.addQuery('user', current.manager);
	grPM.query();
    if (!grPM.hasNext()) {
		var amd = new GlideRecord('sys_user_grmember');
        amd.initialize();
        amd.group = current.sys_id;
        amd.user = current.manager;
        amd.insert();
    } else gs.addInfoMessage('Manager is already part of the group');

})(current, previous);
