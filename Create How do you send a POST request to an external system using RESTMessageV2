var r = new sn_ws.RESTMessageV2(); 
r.setEndpoint('https://api.example.com/messages'); 
r.setHttpMethod('POST'); 
r.setRequestHeader('Content-Type', 'application/json'); 
r.setRequestHeader('Authorization', 'Bearer YOUR_TOKEN'); 
r.setRequestBody(JSON.stringify({ 
name: 'Imran', 
message: 'ServiceNow integration successful' 
})); 
try { 
var res = r.execute(); 
gs.info("Response Code: " + res.getStatusCode()); 
gs.info("Response Body: " + res.getBody()); 
} catch (ex) { 
gs.error("REST call failed: " + ex.message); 
} 

/*
✅ What You're Doing
You're making a REST API POST call from server-side script in ServiceNow using sn_ws.RESTMessageV2().

🧠 Line-by-Line Explanation

var r = new sn_ws.RESTMessageV2();
You’re creating a new dynamic REST message (not a predefined one).

sn_ws.RESTMessageV2() is the REST API class provided by ServiceNow to make HTTP/HTTPS requests.

Used only on the server-side (Script Includes, Business Rules, Scheduled Jobs, etc.).


r.setEndpoint('https://api.example.com/data');
This sets the URL of the API you're calling.

Replace this with a real endpoint like https://api.sendgrid.com/v3/mail/send or your actual service endpoint.


r.setHttpMethod('POST');
You are specifying the HTTP method as POST.

Other possible methods: GET, PUT, DELETE, etc.

POST is used to send data to the server (e.g., creating something new).


r.setRequestHeader('Content-Type', 'application/json');
You are saying: “I'm sending JSON-formatted data.”

This is mandatory when sending data in body.


r.setRequestBody('{"name":"Test"}');
You're setting the data (in JSON format) that will be sent in the request.

Here, you're sending { "name": "Test" } to the API.


var response = r.execute();
This executes the API call.

It returns a response object containing the body, status code, etc.

Note: This runs synchronously. If you need async, use executeAsync().

javascript
Copy
Edit
gs.info(response.getBody());
Logs the response body (usually JSON or text) to the system log.

You can view it in System Logs > All or via gs.log().

🧪 Output Example
Let’s say the API returns this:


{
  "status": "success",
  "id": 12345
}
Then your script will log:


*** Script: {"status":"success","id":12345}
🔐 What About Authentication?
Your code doesn’t include authentication. Many APIs (like Jira, Twilio, Slack, etc.) require an API key or OAuth token.

You can add:


r.setRequestHeader('Authorization', 'Bearer YOUR_API_KEY_HERE');
Or you can use ServiceNow's built-in credentials with:


r.setAuthenticationProfile(authenticationType, profileName);
✅ When and Where to Use This
Use Case	Examples
Integration	Send data to external systems (like Jira, Zoom, etc.)
Script Include	Call API when user clicks a UI Action
Scheduled Job	Push data periodically to 3rd-party
Scripted REST API	Expose an API that calls another API
Business Rule	Trigger REST call when a record is inserted/updated

⚠️ Things to Check Before Using
Item	Why It Matters
Outbound access	Instance must allow outbound HTTP
MID Server needed?	If endpoint is internal/private
Authentication	Does API need token or Basic Auth?
Rate limits	External APIs often limit how many times you can call them

💡 Bonus: Add Error Handling

try {
    var response = r.execute();
    var status = response.getStatusCode();
    var body = response.getBody();
    gs.info("Status: " + status);
    gs.info("Response: " + body);
} catch (ex) {
    gs.error("REST call failed: " + ex.message);
}
🧩 Summary
Concept	Explanation
What is this?	A server-side REST POST request
What does it do?	Sends JSON data to an external API
Server-side only?	✅ Yes
Needs auth?	✅ If API requires it
Use setEndpoint?	✅ To define target URL
Use setRequestBody?	✅ To send JSON or XML data
*/
